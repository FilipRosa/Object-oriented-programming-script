\contentsline {section}{Obsah}{1}{section*.1}%
\contentsline {section}{\numberline {1}Modularita}{2}{section.1}%
\contentsline {subsection}{\numberline {1.1}Co je hlavním motivem pro vývoj programovacího paradigmatu od imperativního k objektovému?}{2}{subsection.1.1}%
\contentsline {subsection}{\numberline {1.2}Co je imperativní programování?}{2}{subsection.1.2}%
\contentsline {subsection}{\numberline {1.3}Co je modulární programování?}{2}{subsection.1.3}%
\contentsline {subsection}{\numberline {1.4}Jaké jsou hlavní faktory kvality software?}{2}{subsection.1.4}%
\contentsline {subsection}{\numberline {1.5}Co je pochopitelnost modulu? Uveďte příklad.}{2}{subsection.1.5}%
\contentsline {subsection}{\numberline {1.6}Co je samostatnost modulu? Uveďte příklad.}{2}{subsection.1.6}%
\contentsline {subsection}{\numberline {1.7}Co je kombinovatelnost modulu? Uveďte příklad.}{3}{subsection.1.7}%
\contentsline {subsection}{\numberline {1.8}Co je zapouzdření modulu? Uveďte příklad.}{3}{subsection.1.8}%
\contentsline {subsection}{\numberline {1.9}Co je explicitní rozhraní modulu? Uveďte příklad.}{3}{subsection.1.9}%
\contentsline {subsection}{\numberline {1.10}Co je syntaktická podpora modularity?}{3}{subsection.1.10}%
\contentsline {subsection}{\numberline {1.11}Co je pět kritérií pro dobrou modularitu?}{3}{subsection.1.11}%
\contentsline {subsection}{\numberline {1.12}Co se rozumí pěti pravidly zajišťující dobrou modularitu?}{3}{subsection.1.12}%
\contentsline {subsection}{\numberline {1.13}Popište jednotlivá kritéria dobré modularity. Uveďte příklady.}{4}{subsection.1.13}%
\contentsline {subsection}{\numberline {1.14}Popište jednotlivá pravidla pro dobrou modularitu. Uveďte příklady.}{4}{subsection.1.14}%
\contentsline {subsection}{\numberline {1.15}K čemu je konstruktor? Uveďte příklad.}{5}{subsection.1.15}%
\contentsline {subsection}{\numberline {1.16}K čemu je destruktor, kdy ho potřebujeme a kdy ne? Uveďte příklad.}{5}{subsection.1.16}%
\contentsline {section}{\numberline {2}Třídy a objekty}{6}{section.2}%
\contentsline {subsection}{\numberline {2.1}Co je hlavními příčinami potřeby změn software?}{6}{subsection.2.1}%
\contentsline {subsection}{\numberline {2.2}Jaké jsou hlavní faktory ovlivňující objektovou orientovanost?}{6}{subsection.2.2}%
\contentsline {subsection}{\numberline {2.3}Vysvětlete, co rozumíme pojmy objektově orientovaná metoda (přístup) a jazyk.}{6}{subsection.2.3}%
\contentsline {subsection}{\numberline {2.4}Vysvětlete, co rozumíme podporou objektově orientované implementace.}{7}{subsection.2.4}%
\contentsline {subsection}{\numberline {2.5}Vysvětlete, co rozumíme podporou opakované použitelnosti.}{7}{subsection.2.5}%
\contentsline {subsection}{\numberline {2.6}Vysvětlete pojmy třída a objekt a použijte správnou terminologii.}{7}{subsection.2.6}%
\contentsline {subsection}{\numberline {2.7}Zdůrazněte vlastnosti třídy z pohledu modularity.}{7}{subsection.2.7}%
\contentsline {subsection}{\numberline {2.8}Vysvětlete princip zapouzdření v OOP.}{7}{subsection.2.8}%
\contentsline {subsection}{\numberline {2.9}Vysvětlete princip zasílání zpráv.}{7}{subsection.2.9}%
\contentsline {subsection}{\numberline {2.10}Vysvětlete principy deklarace a definice jednoduché třídy v C++.}{7}{subsection.2.10}%
